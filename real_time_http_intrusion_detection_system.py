# -*- coding: utf-8 -*-
"""Real Time Http Intrusion Detection System.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v6jNsxLOMLnGl1l26OUsyq15VLH3zyAt
"""

import time
import requests
import uuid

# Define the time interval (in seconds) for which the request count will be tracked
time_interval = 10

# Define the maximum number of requests allowed within the time interval
max_requests = 10

# Define a dictionary to store the request counts for each URL
request_counts = {}

# Define a function to check if a given URL has exceeded the maximum number of requests within the time interval
def check_request_count(url):
    current_time = time.time()
    if url in request_counts:
        if current_time - request_counts[url]['last_request_time'] <= time_interval:
            request_counts[url]['count'] += 1
        else:
            request_counts[url]['count'] = 1
        request_counts[url]['last_request_time'] = current_time
    else:
        request_counts[url] = {'count': 1, 'last_request_time': current_time}
    return request_counts[url]['count'] > max_requests

# Define a function to simulate an intrusion attempt by generating multiple requests to a URL within a short time interval
def simulate_intrusion(url, num_requests, interval):
    print(f"Starting intrusion attempt on {url}...")
    for i in range(num_requests):
        response = requests.get(url)
        print(f"Response status code: {response.status_code}")
        time.sleep(interval)
    print("Intrusion attempt complete.")

# Define the target URL
url = "http://ictmu.in/target"

# Run the IDS code without an intrusion attempt
print("Running IDS code without intrusion attempt...")
for i in range(20):
    response = requests.get(url)
    print(f"Response status code: {response.status_code}")
    if check_request_count(url):
        print("IDS alert: Maximum number of requests exceeded.")
    time.sleep(1)

# Run the IDS code with an intrusion attempt
print("Running IDS code with intrusion attempt...")
simulate_intrusion(url, 50, 0.1)
for i in range(20):
    response = requests.get(url)
    print(f"Response status code: {response.status_code}")
    if check_request_count(url):
        print("IDS alert: Maximum number of requests exceeded.")
    time.sleep(1)